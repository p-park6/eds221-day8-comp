---
title: "eds221-day8-comp1"
format: html
editor: visual
---

# Review Basics of ggplot

```{r}
library(tidyverse)
library(here)
library(janitor)

library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(gapminder)
library(sf)
```

# Read in data
```{r}
lizards <- read_csv(here::here("data_tidy", "lizards.csv"))
```

data wrangling to create a new subset from izards where you:
1. limit the data to only contain western whiptails, colorado checkered, and eastern fence lizards
2. add a new column with total length converted to cm
3. group by species and site
4. return a summary table with mean total length and standard deviation of total length by species and site
```{r}
lizards_limit <- lizards %>% 
  filter(common_name %in% c("western whiptails", "colorado checkered", "eastern fence")) %>% 
  mutate(length_cm = total_length / 10) %>% 
  group_by(common_name, site) %>% 
  summarise(mean_total_length = mean(total_length),
            sd_total_length = sd(total_length))
```

# 

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) + 
  geom_point(aes(color = weight)) + 
  scale_y_continuous(limits = c(0, 100), 
                     breaks = seq(from = 0, to = 100, by = 20),
                     expand = c(0,0)) + 
  scale_color_gradient(low = "pink", high = "purple")
  
#  facet_wrap(~ common_name, scales = "free")
```

```{r}
lizard_counts <- lizards %>% 
  dplyr::count(common_name)

#or use group_by(common_name), summarize(n = n()). This helps for means, sd, and easier to name columns
#use dplyr:: count to find the total number of lizards by common name in the lizards dataset
```


```{r}
ggplot(data = lizard_counts, aes(x = n, y = fct_reorder(common_name, n))) + 
  geom_col()
```

```{r}
ggplot(data = gapminder, aes(x = lifeExp, y = gdpPercap)) +
  geom_point() + 
  annotate("text", x = 40, y = 90000, label = "A LABEL") + 
  geom_hline(yintercept = 70000, linetype = "dotted", color = "purple") + 
  geom_vline(xintercept = mean(gapminder$lifeExp))
```


```{r}
gapminder %>% 
  filter(year == 2002, continent == "Europe") %>% 
  ggplot(aes(x = gdpPercap, y = lifeExp)) + 
  geom_point(shape = 23, size = 4, color = "purple", fill = "pink") + 
  geom_text_repel(aes(label = country)) #ggrepel
```

```{r}
gapminder %>% 
  filter(year == 2002, continent == "Europe") %>% 
  ggplot(aes(x = gdpPercap, y = lifeExp)) + 
  geom_point() + 
#  geom_text_repel(aes(label = country)) + 
  gghighlight(country %in% c("Poland", "France"), label_key = country)
```

Create a ggplot chart using data only from 2007, then highlight all countries in Europe, adding their country name as the label (using the same x & y variables as above)
```{r}
gapminder %>% 
  filter(year == 2007) %>% 
  ggplot(aes(x = gdpPercap, y = lifeExp)) + 
  geom_point() + 
  geom_text_repel(aes(label = country)) +
  gghighlight(continent == "Europe")
```

```{r}
jornada_veg <- read_sf(here::here("data_raw", "spatial_vegetation", "doc.kml")) %>% 
  select(name = Name)

ggplot() + 
  geom_sf(data = jornada_veg, aes(fill = name), color = NA) + 
  theme_minimal() + 
  scale_fill_paletteer_d(palette = "palettetown::lapras") + 
  theme(panel.background = element_rect(color = "purple", size = 5, fill = "pink"), 
        plot.background = element_rect(fill = "yellow"),
        panel.grid = element_line(color = "magenta"), 
        axis.text.x = element_text(color = "red"))
```


